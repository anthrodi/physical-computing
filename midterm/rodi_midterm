/*
Light Sprint - Midterm Project
Anth Rodi
DIGF2B03 Physical Computing
OCAD University
Created on 02/11/15

Based on:

Arduino For, Arduino Language Reference, http://arduino.cc/en/Reference/For
Struct Resource for Arduino, Alexander Brevig, http://playground.arduino.cc/Code/Struct


*/

#include "Tlc5940.h" //Library for TLC5940 LED driver

int powerPin = 2; //Power Switch
int powerState = 0;

int p1_led[] = {14, 12, 10, 8, 6, 4, 2, 0}; //Player 1's indicator LEDs on the TLC5940
int p2_led[] = {1, 3, 5, 7, 9, 11, 13, 15}; //Player 2's indicator LEDS on the TLC5940

//Common Cathode RGB LED
int redPin = 6;
int greenPin = 4;
int bluePin = 5;

//Current colour of RGB LED
int ledcolour = 0;

typedef struct {
  int pin;
  boolean pressed;
  boolean player;
  int colour;
  int val;
} buttons;

buttons button[6];

int p1count = 0;
int p2count = 0;

unsigned long previousMillis = 0;  // store last time LED was updated

long interval = 500;    // interval at which to blink (milliseconds)

void buttonSetup() {
 
 //Player 1 Blue Button 
 button[0].pin = 14;
 button[0].pressed = false;
 button[0].player = 1;
 button[0].colour = 1; //if RGB LED is blue
 button[0].val = 0;
 
 //Player 1 Green Button  
 button[1].pin = 15;
 button[1].pressed = false;
 button[1].player = 1;
 button[1].colour = 0; //if RGB LED is green
 button[1].val = 0;
 
 //Player 1 Pink Button 
 button[2].pin = 16;
 button[2].pressed = false;
 button[2].player = 1;
 button[2].colour = 2; //if RGB LED is pink
 button[2].val = 0;
 
 //Player 2 Green Button  
 button[3].pin = 17;
 button[3].pressed = false;
 button[3].player = 2;
 button[3].colour = 0; //if RGB LED is green
 button[3].val = 0;
 
 //Player 2 Blue Button  
 button[4].pin = 18;
 button[4].pressed = false;
 button[4].player = 2;
 button[4].colour = 1; //if RGB LED is blue
 button[4].val = 0;
 
 //Player 2 Pink Button
 button[5].pin = 7;
 button[5].pressed = false;
 button[5].player = 2;
 button[5].colour = 2; //if RGB LED is pink
 button[5].val = 0;
}

void setup() {
  
  pinMode(powerPin,INPUT_PULLUP);
  
  Serial.begin(9600); //Start telling me things
  Tlc.init();
    
  //define RGB LED
  pinMode(redPin, OUTPUT);
  pinMode(greenPin, OUTPUT);
  pinMode(bluePin, OUTPUT);
  
  //setup RGB LED
  digitalWrite(redPin, HIGH);
  digitalWrite(greenPin, HIGH);
  digitalWrite(bluePin, HIGH);
  
  //Run Player Button Setup
  buttonSetup();
  
  for (int i=0; i <= 5; i++){
    pinMode(button[i].pin, INPUT_PULLUP);
  }
  
}

// Turns off all LEDS
void clear_real() {
     for (int i=0; i < 16; i++){
        Tlc.set(i,4095);
     } 
}


// Light the LEDS by player score
void light_led() {
  
 for (int i=0; i <= p1count; i++){
  Tlc.set(p1_led[i], 0);
 }
 
  for (int i=0; i <= p2count; i++){
    Tlc.set(p2_led[i], 0);
  }
  
}
 

void loop() {
  
  powerState = digitalRead(powerPin); //Read Power Switch
  
  if(powerState == LOW) {
  
   unsigned long currentMillis = millis();
  
   for (int i=0; i <= 5; i++){
        
    button[i].val = digitalRead(button[i].pin);
     
    if(button[i].val == HIGH && button[i].pressed == true) {
      button[i].pressed = false;
    } 
     
    if(button[i].val == LOW && button[i].pressed == false) {
      button[i].pressed = true;
      if (ledcolour == button[i].colour) {
          if (button[i].player == 1) {
            p1count++;
            Serial.print("\t buttonn = ");    
            Serial.println(i);  
            Serial.print("\t buttonc = ");    
            Serial.println(button[i].colour);   
            Serial.print("\t player 1 = ");      
            Serial.println(p1count); 
          } 
          else if(button[i].player == 2){
            p2count++;
            Serial.print("\t buttonn = ");    
            Serial.println(i);  
            Serial.print("\t buttonc = ");    
            Serial.println(button[i].colour); 
            Serial.print("\t player 2 = ");      
            Serial.println(p2count); 
          }
      } else {
          if (button[i].player == 1) {
            p1count--;
            Serial.print("\t buttonn = ");    
            Serial.println(i);  
            Serial.print("\t buttonc = ");    
            Serial.println(button[i].colour); 
            Serial.print("\t player 1 = ");      
            Serial.println(p1count); 
          } 
          else if(button[i].player == 2){
            p2count--;
            Serial.print("\t buttonn = ");    
            Serial.println(i);  
            Serial.print("\t buttonc = ");    
            Serial.println(button[i].colour); 
            Serial.print("\t player 2 = ");      
            Serial.println(p2count); 
          }
      }
    }
     
   } 
   
    if(currentMillis - previousMillis >= interval) {
    // save the last time you blinked the LED 
    previousMillis = currentMillis;   

    ledcolour = random(0,3); //change the RGB randomly between 3 colours

    switch(ledcolour){
    case 0:
      setColour(0,255,0); //set LED Green
      break;

    case 1:
      setColour(0,0,255); //set LED Blue
      break;
      
    case 2:
      setColour(128,0,255); //set LED Pink
      break;
    }
  }
  
    if (p1count >= 7) {
      // Player 1 win condition
      p1count = 0;
      p2count = 0;
    }
    else if (p2count >= 7) {
      // Player 2 win condition
      p1count = 0;
      p2count = 0;
    }
    
    if (p1count < 0) {
      // Keep Player 1 from going into negative score
      p1count = 0;
    }
    else if (p2count < 0) {
      // PKeep Player 2 from going into negative score
      p2count = 0;
    }
    
    clear_real();
    light_led();
    Tlc.update();
    
    delay(1);
  
} //end loop

  //if Power Switch is off
  else {
    
    Tlc.update();
    clear_real();
    setColour(0,0,0);
    p1count=0;
    p2count=0;
}
}


void setColour(int red, int green, int blue)
{
  analogWrite(redPin, red);
  analogWrite(greenPin, green);
  analogWrite(bluePin, blue);
}
