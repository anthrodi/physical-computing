/*
Lab 3 - Light Sensor Sketch
Anth Rodi
DIGF 2B03 Physical Computing
created on 01/25/15

based on:
Mario_Music.ino, ProfMuggs, instructables.com/id/Play-Custom-Melodies-on-Arduino
*/

#include "pitches.h" //reference tone library

int speakerPin = 3; //speaker pin
int sensorPin = A0; //sensor pin
int sensorValue; // sensor value
int percent; //change range of values to 1-100

int sensorMin = 1023;        // minimum sensor value
int sensorMax = 0;           // maximum sensor value


// notes in the melody:
int Mario_melody[] = {
  NOTE_E4, NOTE_E4, REST, NOTE_E4, 
  REST, NOTE_C4, NOTE_E4, REST,
  NOTE_G4, REST, REST, NOTE_G3, REST,
  
  NOTE_C4, REST, REST, NOTE_G3,
  REST, NOTE_E3, REST,
  REST, NOTE_A3, REST, NOTE_B3,   
  REST, NOTE_AS3, NOTE_A3, REST,
  
  NOTE_G3, NOTE_E4, NOTE_G4,
  NOTE_A4, REST, NOTE_F4, NOTE_G4, 
  REST, NOTE_E4, REST, NOTE_C4, 
  NOTE_D4, NOTE_B3, REST
};

int Mario_Notes[] = {
  4, 4, 4, 4,
  4, 4, 4, 4,
  4, 2, 4, 2, 2,
  
  4, 4, 4, 4,
  2, 4, 4,
  4, 4, 4, 4,  
  4, 4, 4, 4,
  
  4, 2, 4,
  4, 4, 4, 4,
  4, 4, 4, 4, 
  4, 4, 2
  };
  
  const int num_elements_in_arr = sizeof(Mario_Notes)/sizeof(Mario_Notes[0]);
 

void setup() {
    
  Serial.begin(9600); // Start Serial Monitoring
 }



void loop() {
  
  sensorValue = analogRead(sensorPin); //check sensor for values
  percent = map(sensorValue,0,1023,0,100); //from 0-1023 range to 0-100 range
  sensorValue = constrain(percent, 0, 100); //constrain values 
  Serial.println(percent); //show values
  
  if (percent >= 99) { //if it is dark
    
  
      // iterate over the notes of the melody:
  for (int thisNote = 0; thisNote < num_elements_in_arr; thisNote++) {

    // to calculate the note duration, take one second
    // divided by the note type.
    //e.g. quarter note = 1000 / 4, eighth note = 1000/8, etc.
    int noteDuration = 500/Mario_Notes[thisNote];
    tone(speakerPin, Mario_melody[thisNote],noteDuration);

    // to distinguish the notes, set a minimum time between them.
    // the note's duration + 30% seems to work well:
    int pauseBetweenNotes = noteDuration * 1.30;
    delay(pauseBetweenNotes);
    // stop the tone playing:
    noTone(speakerPin);
  }
  }
  else {
    noTone(speakerPin); //don't play melody
    Serial.println(percent);
  }
}
